/*
 * reg_core.h- Sigmastar
 *
 * Copyright (c) [2019~2020] SigmaStar Technology.
 *
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 */

#ifndef _DSP_REG_CORE_H_
#define _DSP_REG_CORE_H_

#define DSP_CORE_RESET        REG_ID_00
#define DSP_CORE_RESET_ALL    BITS(7 : 0, BIT(0))
#define DSP_CORE_RESET_CORE   BITS(7 : 0, BIT(1))
#define DSP_CORE_RESET_BRIDGE BITS(7 : 0, BIT(2))
#define DSP_CORE_RESET_DRESET BITS(7 : 0, BIT(3))
#define DSP_CORE_RESET_MASK   BMASK(7 : 0)

#define DSP_CORE_RUNSTALL_RESET      REG_ID_00
#define DSP_CORE_RUNSTALL_RESET_EN   BITS(8 : 8, BIT(0))
#define DSP_CORE_RUNSTALL_RESET_MASK BMASK(8 : 8)

#define DSP_CORE_RESET_VECTOR_SEL      REG_ID_00
#define DSP_CORE_RESET_VECTOR_SEL_EN   BITS(9 : 9, BIT(0))
#define DSP_CORE_RESET_VECTOR_SEL_MASK BMASK(9 : 9)

#define DSP_CORE_DEBUG_MODE         REG_ID_00
#define DSP_CORE_DEBUG_MODE_PDBGEN  BITS(15 : 11, BIT(4))
#define DSP_CORE_DEBUG_MODE_DBGEN   BITS(15 : 11, BIT(3))
#define DSP_CORE_DEBUG_MODE_NIDEN   BITS(15 : 11, BIT(2))
#define DSP_CORE_DEBUG_MODE_SPIDEN  BITS(15 : 11, BIT(1))
#define DSP_CORE_DEBUG_MODE_SPNIDEN BITS(15 : 11, BIT(0))
#define DSP_CORE_DEBUG_MODE_MASK    BMASK(15 : 11)

#define DSP_CORE_PRID      REG_ID_01
#define DSP_CORE_PRID_MASK BMASK(15 : 0)

#define DSP_CORE_ALT_RESETVEC_W_LOW  REG_ID_02
#define DSP_CORE_ALT_RESETVEC_W_HIGH REG_ID_03
#define DSP_CORE_ALT_RESETVEC_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_APB_ADDRESS_HIGH      REG_ID_04
#define DSP_CORE_APB_ADDRESS_HIGH_MASK BMASK(15 : 9)
#define DSP_CORE_APB_ADDRESS_HIGH_LSB  9
#define DSP_CORE_APB_ADDRESS_LOW_MASK  BMASK(8 : 2)
#define DSP_CORE_APB_ADDRESS_LOW_LSB   2
#define DSP_CORE_APB_ADDRESS_MASK      BMASK(6 : 0)

#define DSP_CORE_FAST_BIST      REG_ID_04
#define DSP_CORE_FAST_BIST_EN   BITS(7 : 7, BIT(0))
#define DSP_CORE_FAST_BIST_MASK BMASK(7 : 7)

#define DSP_CORE_XIU_CLK_GATING      REG_ID_04
#define DSP_CORE_XIU_CLK_GATING_EN   BITS(8 : 8, BIT(0))
#define DSP_CORE_XIU_CLK_GATING_MASK BMASK(8 : 8)

#define DSP_CORE_APB_SLAVE_CLK      REG_ID_04
#define DSP_CORE_APB_SLAVE_CLK_EN   BITS(9 : 9, BIT(0))
#define DSP_CORE_APB_SLAVE_CLK_MASK BMASK(9 : 9)

#define DSP_CORE_TEST_BUS_SEL      REG_ID_04
#define DSP_CORE_TEST_BUS_SEL_MASK BMASK(15 : 11)

#define DSP_CORE_CPU_INT_MSK_W_LOW  REG_ID_06
#define DSP_CORE_CPU_INT_MSK_W_HIGH REG_ID_07
#define DSP_CORE_CPU_INT_MSK_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_CMDQ_INT_MSK0_W_LOW  REG_ID_08
#define DSP_CORE_CMDQ_INT_MSK0_W_HIGH REG_ID_09
#define DSP_CORE_CMDQ_INT_MSK0_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_CMDQ_INT_MSK1_W_LOW  REG_ID_0A
#define DSP_CORE_CMDQ_INT_MSK1_W_HIGH REG_ID_0B
#define DSP_CORE_CMDQ_INT_MSK1_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_REMAP_BASE_SHIFT   12 // 4K BYTE
#define DSP_CORE_REMAP_LEN_SHIFT    12 // 4K BYTE
#define DSP_CORE_REMAP_OFFSET_SHIFT 20 // 1M BYTE

#define DSP_CORE_REMAP_BASE0_W_HIGH REG_ID_0D
#define DSP_CORE_REMAP_BASE0_W_LOW  REG_ID_0C
#define DSP_CORE_REMAP_BASE0_W_MASK BMASK(19 : 0)

#define DSP_CORE_REMAP_BASE1_W_HIGH REG_ID_0F
#define DSP_CORE_REMAP_BASE1_W_LOW  REG_ID_0E
#define DSP_CORE_REMAP_BASE1_W_MASK BMASK(19 : 0)

#define DSP_CORE_REMAP_LEN0      REG_ID_10
#define DSP_CORE_REMAP_LEN0_MASK BMASK(15 : 0)

#define DSP_CORE_REMAP_LEN1      REG_ID_11
#define DSP_CORE_REMAP_LEN1_MASK BMASK(15 : 0)

#define DSP_CORE_REMAP_OFFSET0      REG_ID_12
#define DSP_CORE_REMAP_OFFSET0_MASK BMASK(15 : 0)

#define DSP_CORE_REMAP_OFFSET1      REG_ID_13
#define DSP_CORE_REMAP_OFFSET1_MASK BMASK(15 : 0)

#define DSP_CORE_REMAP_OFFSET2      REG_ID_14
#define DSP_CORE_REMAP_OFFSET2_MASK BMASK(15 : 0)

#define DSP_CORE_GPI_W_LOW  REG_ID_16
#define DSP_CORE_GPI_W_HIGH REG_ID_17
#define DSP_CORE_GPI_W_MASK BMASK(15 : 0)

#define DSP_CORE_RESERVED_DW      REG_ID_18
#define DSP_CORE_RESERVED_DW_MASK BMASK_ULL(63 : 0)

#define DSP_CORE_BIST_FAIL_DW      REG_ID_20
#define DSP_CORE_BIST_FAIL_DW_MASK BMASK_ULL(60 : 0)

#define DSP_CORE_TEST_OUT_W      REG_ID_24
#define DSP_CORE_TEST_OUT_W_MASK BMASK(23 : 0)

#define DSP_CORE_PFAULT_INFO_DW_LOW  REG_ID_26
#define DSP_CORE_PFAULT_INFO_DW_HIGH REG_ID_28
#define DSP_CORE_PFAULT_INFO_DW_MASK BMASK_ULL(63 : 0)

#define DSP_CORE_PFAULT_VALID_ERROR      REG_ID_2A
#define DSP_CORE_PFAULT_VALID            BITS(1 : 0, BIT(0))
#define DSP_CORE_PFAULT_ERROR            BITS(1 : 0, BIT(1))
#define DSP_CORE_PFAULT_VALID_ERROR_MASK BMASK(1 : 0)

#define DSP_CORE_APB_SLAVE_ERR       REG_ID_2A
#define DSP_CORE_APB_SLAVE_ERR_CHECK BITS(2 : 2, BIT(0))
#define DSP_CORE_APB_SLAVE_ERR_MASK  BMASK(2 : 2)

#define DSP_CORE_GPO_W_LOW  REG_ID_2E
#define DSP_CORE_GPO_W_HIGH REG_ID_2F
#define DSP_CORE_GPO_W_MASK BMASK(15 : 0)

#define DSP_CORE_IRQ_EDGE_EN_L      REG_ID_30
#define DSP_CORE_IRQ_EDGE_EN_H      REG_ID_31
#define DSP_CORE_IRQ_EDGE_EN_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_IRQ_MSK_L      REG_ID_32
#define DSP_CORE_IRQ_MSK_H      REG_ID_33
#define DSP_CORE_IRQ_MSK_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_IRQ_EDGE_FORCE_L      REG_ID_34
#define DSP_CORE_IRQ_EDGE_FORCE_H      REG_ID_35
#define DSP_CORE_IRQ_EDGE_FORCE_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_IRQ_EDGE_CLEAR_L      REG_ID_36
#define DSP_CORE_IRQ_EDGE_CLEAR_H      REG_ID_37
#define DSP_CORE_IRQ_EDGE_CLEAR_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_IRQ_EDGE_POL_L      REG_ID_38
#define DSP_CORE_IRQ_EDGE_POL_H      REG_ID_39
#define DSP_CORE_IRQ_EDGE_POL_W_MASK BMASK_ULL(31 : 0)

#define DSP_CORE_IRQ_STAT_BEFORE_MSK_L      REG_ID_40
#define DSP_CORE_IRQ_STAT_BEFORE_MSK_H      REG_ID_41
#define DSP_CORE_IRQ_STAT_BEFORE_MSK_W_MASK BMASK_ULL(31 : 0)

#endif /*_DSP_REG_CORE_H_*/