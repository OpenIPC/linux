/*
 * regMIU.h- Sigmastar
 *
 * Copyright (c) [2019~2020] SigmaStar Technology.
 *
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 */
#ifndef _REG_MIU_H_
#define _REG_MIU_H_

//-------------------------------------------------------------------------------------------------
//  Macro and Define
//-------------------------------------------------------------------------------------------------

#ifndef BIT
#define BIT(_bit_) (1 << (_bit_))
#endif

#define OVERALL_CLIENT_ID (0x00)
// high way clientID
#define CA55_CLIENT_ID (0x80)
#define CA7_CLIENT_ID  (0x90)
#define DSP0_CLIENT_ID (0xA0)
#define DSP1_CLIENT_ID (0xB0)
#define IPU0_CLIENT_ID (0xE0)
#define IPU1_CLIENT_ID (0xF0)

#define OVERALL_CLIENT_ID     (0x00)
#define MIU_GRP_CLIENT_NUM    (0x10)               // client channel of group arbiter
#define MIU_GRP_NUM           (0x08)               // group 0/1/3/4/5
#define MIU_ARB_CLIENT_NUM    (IPU1_CLIENT_ID + 1) // support maximum client ID
#define MIU_PREARB_CLIENT_NUM (0x10)               // group channel of pre-arbiter
#define MIU_PREARB_NUM        (0x02)

#define MIU_CLIENT_SPECIAL_ORDER_NUM (0x06)

#define MIU_GARB_WIN_NUM      (0x40) // maximum of order buffer
#define MIU_PREARB_CLIENT_MAX (MIU_PREARB_CLIENT_NUM * MIU_GRP_CLIENT_NUM)
#define BITS_RANGE(range)           (BIT(((1)?range)+1) - BIT((0)?range))
#define BITS_RANGE_VAL(x, range)    ((x & BITS_RANGE(range)) >> ((0)?range))

#define PM_REG_BASE   (0x1E00UL)
#define CHIP_TOP_BASE (0x1E00UL)

#define MIU_MMU_REG_BASE         (0x65900UL) // 0x1659
#define MIU_PROTECT_REG_BASE     (0x65A00UL) // 0x165A
#define MIU_PROTECT_SUB_REG_BASE (0x65B00UL) // 0x165B
#define MIU_MMU_PROTECT_REG_BASE (0x65C00UL) // 0x165C

#define MIU_PROTECT_DDR_SIZE      (MIU_MMU_REG_BASE + 0x07UL)
#define MIU_PROTECT_DDR_SIZE_MASK BITS_RANGE(15 : 12)

#if 1
#define MIU_PROTECT00_03_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA0UL)
#define MIU_PROTECT04_07_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA2UL)
#define MIU_PROTECT08_0B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA4UL)
#define MIU_PROTECT0C_0F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA6UL)
#define MIU_PROTECT10_13_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA8UL)
#define MIU_PROTECT14_17_EN     (MIU_PROTECT_SUB_REG_BASE + 0xAAUL)
#define MIU_PROTECT18_1B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xACUL)
#define MIU_PROTECT1C_1F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xAEUL)
#define MIU_PROTECT00_03_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA1UL)
#define MIU_PROTECT04_07_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA3UL)
#define MIU_PROTECT08_0B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA5UL)
#define MIU_PROTECT0C_0F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA7UL)
#define MIU_PROTECT10_13_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA9UL)
#define MIU_PROTECT14_17_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xABUL)
#define MIU_PROTECT18_1B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xADUL)
#define MIU_PROTECT1C_1F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xAFUL)
// protect client ID for write, 0x165B, 0x60~0x6F
#define MIU_PROTECT_WID00 (MIU_PROTECT_SUB_REG_BASE + 0xC0UL)
// protect client ID for read, 0x165B, 0x70~0x7F
#define MIU_PROTECT_RID00 (MIU_PROTECT_SUB_REG_BASE + 0xE0UL)
// protect id enable, 0x165A, 0x40~0x7F
#define MIU_PROTECT00_LSB_ID_ENABLE (MIU_PROTECT_REG_BASE + 0x80UL)
#define MIU_PROTECT00_MSB_ID_ENABLE (MIU_PROTECT_REG_BASE + 0x82UL)
// protect msb address, 0x165B, 0x00~0x1F
// [6:0]: start msb address, [14:8]: end msb address
#define MIU_PROTECT00_MSB (MIU_PROTECT_SUB_REG_BASE + 0x00UL)
// protect start/end address, 0x165A, 0x00~3F
#define MIU_PROTECT00_START (MIU_PROTECT_REG_BASE + 0x00UL)
#define MIU_PROTECT00_END   (MIU_PROTECT_REG_BASE + 0x02UL)

// turn on the log of protection function
#define REG_MIU_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x42UL)

#endif

/*MMU protect regitsters*/
// protect client ID, 0x165B, 0x40/0x41
#define MMU_PROTECT_CHK_FLG_LSB (MIU_PROTECT_SUB_REG_BASE + 0x80UL)
#define MMU_PROTECT_CHK_FLG_MSB (MIU_PROTECT_SUB_REG_BASE + 0x82UL)

#define MMU_PROTECT0_CHK_FLG (MIU_REG_BASE + 0xB2UL)
#define MMU_PROTECT1_CHK_FLG (MIU_REG_BASE + 0xB2UL)
#define MMU_PROTECT2_CHK_FLG (MIU_REG_BASE + 0xB2UL)
#define MMU_PROTECT3_CHK_FLG (MIU_REG_BASE + 0xB2UL)
#define MMU_PROTECT4_CHK_FLG (MIU_REG_BASE + 0xB2UL)
// protect client ID for write, 0x1659, 0x40~0x4F
#define MMU_PROTECT_WID00 (MIU_MMU_REG_BASE + 0x80UL)
// protect client ID for read, 0x1659, 0x50~0x5F
#define MMU_PROTECT_RID00 (MIU_MMU_REG_BASE + 0xA0UL)

// mmu protect r/w enable, 0x165B, 0x58~0x5F
#define MMU_PROTECT00_03_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB0UL)
#define MMU_PROTECT04_07_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB2UL)
#define MMU_PROTECT08_0B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB4UL)
#define MMU_PROTECT0C_0F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB6UL)
#define MMU_PROTECT10_13_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB8UL)
#define MMU_PROTECT14_17_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBAUL)
#define MMU_PROTECT18_1B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBCUL)
#define MMU_PROTECT1C_1F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBEUL)
#define MMU_PROTECT00_03_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB1UL)
#define MMU_PROTECT04_07_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB3UL)
#define MMU_PROTECT08_0B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB5UL)
#define MMU_PROTECT0C_0F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB7UL)
#define MMU_PROTECT10_13_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB9UL)
#define MMU_PROTECT14_17_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBBUL)
#define MMU_PROTECT18_1B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBDUL)
#define MMU_PROTECT1C_1F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBFUL)

// mmu protect start/end address, 0x165C, 0x00~3F
#define MMU_PROTECT00_START (MIU_MMU_PROTECT_REG_BASE + 0x00UL)
#define MMU_PROTECT00_END   (MIU_MMU_PROTECT_REG_BASE + 0x02UL)
// mmu protect msb address, 0x165B, 0x20~0x3F
// [6:0]: start msb address, [14:8]: end msb address
#define MMU_PROTECT00_MSB (MIU_PROTECT_SUB_REG_BASE + 0x40UL)

// mmu protect id enable, 0x165C, 0x40~0x7F
#define MMU_PROTECT00_LSB_ID_ENABLE (MIU_MMU_PROTECT_REG_BASE + 0x80UL)
#define MMU_PROTECT00_MSB_ID_ENABLE (MIU_MMU_PROTECT_REG_BASE + 0x82UL)

// MMU Protection Status
#define REG_MMU_PROTECT_LOG_CLR  (BIT2)
#define REG_MMU_PROTECT_IRQ_MASK (BIT3)
// MMU Protection HIT
#define REG_MMU_NWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x68UL)
#define REG_MMU_NWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6AUL)
#define REG_MMU_HWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6CUL)
#define REG_MMU_HWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6EUL)
#define REG_MMU_NWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x70UL)
#define REG_MMU_NWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x72UL)
#define REG_MMU_NWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x74UL)
#define REG_MMU_NWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x76UL)
#define REG_MMU_HWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x78UL)
#define REG_MMU_HWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x7AUL)
#define REG_MMU_HWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x7CUL)
#define REG_MMU_HWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x7EUL)
#define REG_MMU_PROTECT_HIT_FALG   (BIT0)
#define REG_MMU_PROTECT_HIT_NO     6 : 1
#define REG_MMU_PROTECT_HIT_ID     15 : 8

#define REG_MIU_I64_MODE  (BIT7)
#define REG_MIU_INIT_DONE (BIT15)

// Protection Status
#define REG_MIU_PROTECT_LOG_CLR  (BIT0)
#define REG_MIU_PROTECT_IRQ_MASK (BIT1)

// MIU Protection HIT
#define REG_MIU_NWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x48UL)
#define REG_MIU_NWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4AUL)
#define REG_MIU_HWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4CUL)
#define REG_MIU_HWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4EUL)
#define REG_MIU_NWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x50UL)
#define REG_MIU_NWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x52UL)
#define REG_MIU_NWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x54UL)
#define REG_MIU_NWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x56UL)
#define REG_MIU_HWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x58UL)
#define REG_MIU_HWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x5AUL)
#define REG_MIU_HWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x5CUL)
#define REG_MIU_HWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x5EUL)
#define REG_MIU_PROTECT_HIT_FALG   (BIT0)
#define REG_MIU_PROTECT_HIT_NO     6 : 1
#define REG_MIU_PROTECT_HIT_ID     15 : 8

#define REG_MIU_PROTECT_PWR_IRQ_MASK_OFFSET (MIU_MMU_REG_BASE + 0x40UL)
#define REG_MIU_PROTECT_PWR_IRQ_MASK_BIT    (BIT11)

// MMU Control Register
#define REG_MMU_CTRL        (MIU_MMU_REG_BASE + 0x00UL)
#define REG_MMU_VPA_REPLACE (MIU_MMU_REG_BASE + 0x02UL)
#define REG_MMU_RW_ENTRY    (MIU_MMU_REG_BASE + 0x04UL)
#define REG_MMU_W_DATA      (MIU_MMU_REG_BASE + 0x06UL)
#define REG_MMU_W_DATA_MASK 0x0FFF
#define REG_MMU_R_DATA      (MIU_MMU_REG_BASE + 0x08UL)
#define REG_MMU_NWR_R_DATA  (MIU_MMU_REG_BASE + 0x08UL)
#define REG_MMU_NWW_R_DATA  (MIU_MMU_REG_BASE + 0x0AUL)
#define REG_MMU_HWR_R_DATA  (MIU_MMU_REG_BASE + 0x0CUL)
#define REG_MMU_HWW_R_DATA  (MIU_MMU_REG_BASE + 0x0EUL)

//#define REG_MMU_CLIENT_ID_0_1       (MIU_MMU_REG_BASE+0xA8UL)
//#define REG_MMU_CLIENT_ID_2_3       (MIU_MMU_REG_BASE+0xAAUL)
//#define REG_MMU_CLIENT_ID_4_5       (MIU_MMU_REG_BASE+0xACUL)
//#define REG_MMU_CLIENT_ID_6_7       (MIU_MMU_REG_BASE+0xAEUL)
//#define REG_MMU_CLIENT_ID_SEL       (MIU_MMU_REG_BASE+0xB0UL)
#define REG_MMU_IRQ_CTRL (MIU_MMU_REG_BASE + 0x10UL)
#define REG_MMU_IRQ_FLAG (MIU_MMU_REG_BASE + 0x12UL)
//#define REG_MMU_COLLISION_ENTRY     (MIU_MMU_REG_BASE+0x20UL)
#define REG_MMU_NWR_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x20UL)
#define REG_MMU_NWW_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x22UL)
#define REG_MMU_HWR_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x24UL)
#define REG_MMU_HWW_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x26UL)

#define REG_MMU_ACCESS_TRIGGER    0x0F
#define REG_MMU_ACCESS            (MIU_MMU_REG_BASE + 0x14UL)
#define REG_MMU_NWR_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x28UL)
#define REG_MMU_NWW_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x2AUL)
#define REG_MMU_HWR_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x2CUL)
#define REG_MMU_HWW_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x2EUL)

#define REG_MMU_NWR_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x16UL) // offset:0x0b, bit[7:0]
#define REG_MMU_NWW_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x16UL) // offset:0x0b, bit[15:8]
#define REG_MMU_HWR_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x18UL) // offset:0x0c, bit[7:0]
#define REG_MMU_HWW_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x18UL) // offset:0x0c, bit[15:8]

// MMU Control
#define REG_MMU_CTRL_ENABLE         (BIT0)
#define REG_MMU_CTRL_PG_SIZE        2 : 1
#define REG_MMU_CTRL_PG_SIZE_128K   (~(BIT1))
#define REG_MMU_CTRL_PG_SIZE_256K   (BIT1)
#define REG_MMU_CTRL_PG_SIZE_512K   (BIT2)
#define REG_MMU_CTRL_PG_SIZE_1024K  (BIT1 | BIT2)
#define REG_MMU_CTRL_RESET          (BIT4)
#define REG_MMU_CTRL_RESET_INIT_VAL (BIT5)
#define REG_MMU_CTRL_INIT_DONE      (BIT12 | BIT13 | BIT14 | BIT15)
// Read/Write Entry
#define REG_MMU_RW_ENTRY_MODE (BIT15)

// IRQ Control
#define REG_MMU_IRQ_NWR_RW_CLR (BIT0)
#define REG_MMU_IRQ_NWW_RW_CLR (BIT2)
#define REG_MMU_IRQ_HWR_RW_CLR (BIT4)
#define REG_MMU_IRQ_HWW_RW_CLR (BIT6)
#define REG_MMU_IRQ_RW_CLR     (BIT0 | BIT2 | BIT4 | BIT6)
#define REG_MMU_IRQ_RW_MASK    (BIT1 | BIT3 | BIT5 | BIT7)
#define REG_MMU_IRQ_NWR_RD_CLR (BIT8)
#define REG_MMU_IRQ_HWR_RD_CLR (BIT12)
#define REG_MMU_IRQ_RD_CLR     (BIT8 | BIT12)
#define REG_MMU_IRQ_RD_MASK    (BIT9 | BIT13) // nwr & hwr
#define REG_MMU_IRQ_NWW_WR_CLR (BIT10)
#define REG_MMU_IRQ_HWW_WR_CLR (BIT14)
#define REG_MMU_IRQ_WR_CLR     (BIT10 | BIT14)
#define REG_MMU_IRQ_WR_MASK    (BIT11 | BIT15) // nww & hww

#define REG_MMU_IRQ_NWR_RW_FLAG (BIT0)
#define REG_MMU_IRQ_NWW_RW_FLAG (BIT1)
#define REG_MMU_IRQ_HWR_RW_FLAG (BIT2)
#define REG_MMU_IRQ_HWW_RW_FLAG (BIT3)
#define REG_MMU_IRQ_RW_FLAG     (BIT0 | BIT1 | BIT2 | BIT3)
#define REG_MMU_IRQ_NWR_RD_FLAG (BIT8)
#define REG_MMU_IRQ_HWR_RD_FLAG (BIT10)
#define REG_MMU_IRQ_RD_FLAG     (BIT8 | BIT10)
#define REG_MMU_IRQ_NWW_WR_FLAG (BIT9)
#define REG_MMU_IRQ_HWW_WR_FLAG (BIT11)
#define REG_MMU_IRQ_WR_FLAG     (BIT9 | BIT11)

#endif // _REG_MIU_H_
