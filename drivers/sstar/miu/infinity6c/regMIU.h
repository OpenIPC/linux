/*
 * regMIU.h- Sigmastar
 *
 * Copyright (c) [2019~2020] SigmaStar Technology.
 *
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License version 2 for more details.
 *
 */
#ifndef _REG_MIU_H_
#define _REG_MIU_H_

//-------------------------------------------------------------------------------------------------
//  Macro and Define
//-------------------------------------------------------------------------------------------------

#ifndef BIT
#define BIT(_bit_) (1 << (_bit_))
#endif

#define OVERALL_CLIENT_ID     (0x00)
#define MIU_GRP_CLIENT_NUM    (0x10) // client channel of group arbiter
#define MIU_GRP_NUM           (0x03) // group 0/1/3/4/5
#define MIU_ARB_CLIENT_NUM    (0x30) // 16 clients per group, total 3 groups
#define MIU_PREARB_CLIENT_NUM (0x3)  // group channel of pre-arbiter
#define MIU_PREARB_NUM        (0x01)

#define MIU_GARB_WIN_NUM      (0x40) // maximum of order buffer
#define MIU_PREARB_CLIENT_MAX (MIU_PREARB_CLIENT_NUM * MIU_GRP_CLIENT_NUM)

#define MIU_CLIENT_SPECIAL_ORDER_NUM 0

#define BITS_RANGE(range)           (BIT(((1)?range)+1) - BIT((0)?range))
#define BITS_RANGE_VAL(x, range)    ((x & BITS_RANGE(range)) >> ((0)?range))

#define PM_REG_BASE   (0x1E00UL)
#define CHIP_TOP_BASE (0x1E00UL)

#define MIU_MMU_REG_BASE           (0x65900UL) // 0x1659
#define MIU_PROTECT_REG_BASE       (0x65A00UL) // 0x165A
#define MIU_PROTECT_SUB_REG_BASE   (0x65B00UL) // 0x165B
#define MIU_MMU_PROTECT_REG_BASE   (0x65C00UL) // 0x165C
#define MIU_PROTECT_RIDEN_REG_BASE (0x65E00UL) // 0x165E
#define MIU_PROTECT_ID_REG_BASE    (0x65F00UL) // 0x165F

#define MIU_EFFI_SC0_BASE  (0x66800UL) // 0x1668
#define MIU_EFFI_SC1_BASE  (0x66900UL) // 0x1669
#define MIU_EFFI_ISP0_BASE (0x66B00UL) // 0x166B

#define MIU_PROTECT_DDR_SIZE      (MIU_MMU_REG_BASE + 0x1AUL)
#define MIU_PROTECT_DDR_SIZE_MASK BITS_RANGE(3 : 0)

#if 1
#define MIU_PROTECT00_03_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA0UL)
#define MIU_PROTECT04_07_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA2UL)
#define MIU_PROTECT08_0B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA4UL)
#define MIU_PROTECT0C_0F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA6UL)
#define MIU_PROTECT10_13_EN     (MIU_PROTECT_SUB_REG_BASE + 0xA8UL)
#define MIU_PROTECT14_17_EN     (MIU_PROTECT_SUB_REG_BASE + 0xAAUL)
#define MIU_PROTECT18_1B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xACUL)
#define MIU_PROTECT1C_1F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xAEUL)
#define MIU_PROTECT00_03_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA1UL)
#define MIU_PROTECT04_07_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA3UL)
#define MIU_PROTECT08_0B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA5UL)
#define MIU_PROTECT0C_0F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA7UL)
#define MIU_PROTECT10_13_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xA9UL)
#define MIU_PROTECT14_17_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xABUL)
#define MIU_PROTECT18_1B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xADUL)
#define MIU_PROTECT1C_1F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xAFUL)
// protect client ID for write, 0x165F, 0x00~0x1F
#define MIU_PROTECT_WID00 (MIU_PROTECT_ID_REG_BASE + 0x00UL)
// protect client ID for read, 0x165F, 0x20~0x3F
//#define MIU_PROTECT_RID00 (MIU_PROTECT_ID_REG_BASE + 0x40UL)
// protect id enable for wcmd, 0x165A, 0x40~0x7F
#define MIU_PROTECT00_LSB_WID_ENABLE (MIU_PROTECT_REG_BASE + 0x80UL)
#define MIU_PROTECT00_MSB_WID_ENABLE (MIU_PROTECT_REG_BASE + 0x82UL)
// protect id enable for rcmd, 0x165E, 0x00~0x3F
#define MIU_PROTECT00_LSB_RID_ENABLE (MIU_PROTECT_RIDEN_REG_BASE + 0x00UL)
#define MIU_PROTECT00_MSB_RID_ENABLE (MIU_PROTECT_RIDEN_REG_BASE + 0x02UL)

// protect msb address, 0x165B, 0x00~0x1F
// [7:0]: start msb address, [15:8]: end msb address
#define MIU_PROTECT00_MSB (MIU_PROTECT_SUB_REG_BASE + 0x00UL)
// protect start/end address, 0x165A, 0x00~3F
#define MIU_PROTECT00_START (MIU_PROTECT_REG_BASE + 0x00UL)
#define MIU_PROTECT00_END   (MIU_PROTECT_REG_BASE + 0x02UL)

// turn on the log of protection function
#define REG_MIU_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x42UL)

#endif

/*MMU protect regitsters*/
// protect client ID, 0x165B, 0x40/0x41
#define MMU_PROTECT_CHK_FLG_LSB (MIU_PROTECT_SUB_REG_BASE + 0x80UL)
#define MMU_PROTECT_CHK_FLG_MSB (MIU_PROTECT_SUB_REG_BASE + 0x82UL)

// protect client ID for write, 0x165F, 0x40~0x5F
#define MMU_PROTECT_WID00 (MIU_PROTECT_ID_REG_BASE + 0x80UL)
// protect client ID for read, 0x165F, 0x60~0x7F
#define MMU_PROTECT_RID00 (MIU_PROTECT_ID_REG_BASE + 0xC0UL)

// mmu protect r/w enable, 0x165B, 0x58~0x5F
#define MMU_PROTECT00_03_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB0UL)
#define MMU_PROTECT04_07_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB2UL)
#define MMU_PROTECT08_0B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB4UL)
#define MMU_PROTECT0C_0F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB6UL)
#define MMU_PROTECT10_13_EN     (MIU_PROTECT_SUB_REG_BASE + 0xB8UL)
#define MMU_PROTECT14_17_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBAUL)
#define MMU_PROTECT18_1B_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBCUL)
#define MMU_PROTECT1C_1F_EN     (MIU_PROTECT_SUB_REG_BASE + 0xBEUL)
#define MMU_PROTECT00_03_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB1UL)
#define MMU_PROTECT04_07_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB3UL)
#define MMU_PROTECT08_0B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB5UL)
#define MMU_PROTECT0C_0F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB7UL)
#define MMU_PROTECT10_13_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xB9UL)
#define MMU_PROTECT14_17_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBBUL)
#define MMU_PROTECT18_1B_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBDUL)
#define MMU_PROTECT1C_1F_INVERT (MIU_PROTECT_SUB_REG_BASE + 0xBFUL)

#if 0
#define MMU_PROTECT0_EN     (MIU_MMU_REG_BASE + 0xD4UL)
#define MMU_PROTECT1_EN     (MIU_MMU_REG_BASE + 0xD4UL)
#define MMU_PROTECT2_EN     (MIU_MMU_REG_BASE + 0xD4UL)
#define MMU_PROTECT3_EN     (MIU_MMU_REG_BASE + 0xD4UL)
#define MMU_PROTECT0_INVERT (MIU_MMU_REG_BASE + 0xD5UL)
#define MMU_PROTECT1_INVERT (MIU_MMU_REG_BASE + 0xD5UL)
#define MMU_PROTECT2_INVERT (MIU_MMU_REG_BASE + 0xD5UL)
#define MMU_PROTECT3_INVERT (MIU_MMU_REG_BASE + 0xD5UL)
#endif
// mmu protect start/end address, 0x165C, 0x00~3F
#define MMU_PROTECT00_START (MIU_MMU_PROTECT_REG_BASE + 0x00UL)
#define MMU_PROTECT00_END   (MIU_MMU_PROTECT_REG_BASE + 0x02UL)
// mmu protect msb address, 0x165B, 0x20~0x3F
// [7:0]: start msb address, [15:8]: end msb address
#define MMU_PROTECT00_MSB (MIU_PROTECT_SUB_REG_BASE + 0x40UL)

#if 0
#define MMU_PROTECT0_START (MIU_MMU_REG_BASE + 0xC0UL)
#define MMU_PROTECT0_END   (MIU_MMU_REG_BASE + 0xC2UL)
#define MMU_PROTECT1_START (MIU_MMU_REG_BASE + 0xC4UL)
#define MMU_PROTECT1_END   (MIU_MMU_REG_BASE + 0xC6UL)
#define MMU_PROTECT2_START (MIU_MMU_REG_BASE + 0xC8UL)
#define MMU_PROTECT2_END   (MIU_MMU_REG_BASE + 0xCAUL)
#define MMU_PROTECT3_START (MIU_MMU_REG_BASE + 0xCCUL)
#define MMU_PROTECT3_END   (MIU_MMU_REG_BASE + 0xCEUL)
#define MMU_PROTECT0_MSB   (MIU_MMU_REG_BASE + 0xD0UL)
#define MMU_PROTECT1_MSB   (MIU_MMU_REG_BASE + 0xD0UL)
#define MMU_PROTECT2_MSB   (MIU_MMU_REG_BASE + 0xD2UL)
#define MMU_PROTECT3_MSB   (MIU_MMU_REG_BASE + 0xD2UL)
#endif
// mmu protect id enable for wcmd, 0x165C, 0x40~0x7F
#define MMU_PROTECT00_LSB_WID_ENABLE (MIU_MMU_PROTECT_REG_BASE + 0x80UL)
#define MMU_PROTECT00_MSB_WID_ENABLE (MIU_MMU_PROTECT_REG_BASE + 0x82UL)
// mmu protect id enable for rcmd, 0x165E, 0x40~0x7F
#define MMU_PROTECT00_LSB_RID_ENABLE (MIU_PROTECT_RIDEN_REG_BASE + 0x80UL)
#define MMU_PROTECT00_MSB_RID_ENABLE (MIU_PROTECT_RIDEN_REG_BASE + 0x82UL)

#if 0
#define MMU_PROTECT0_ID_ENABLE (MIU_MMU_REG_BASE + 0xD6UL)
#define MMU_PROTECT1_ID_ENABLE (MIU_MMU_REG_BASE + 0xD8UL)
#define MMU_PROTECT2_ID_ENABLE (MIU_MMU_REG_BASE + 0xDAUL)
#define MMU_PROTECT3_ID_ENABLE (MIU_MMU_REG_BASE + 0xDCUL)
#define REG_MMU_PROTECT_STATUS 0XDEUL
#define REG_MMU_PROTECT_LOADDR 0XEAUL
#define REG_MMU_PROTECT_HIADDR 0XECUL
#endif
// MMU Protection Status
#define REG_MMU_PROTECT_LOG_CLR  (BIT2)
#define REG_MMU_PROTECT_IRQ_MASK (BIT3)
// MMU Protection HIT
#if 1
#define REG_MMU_RWCMD_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x68UL)

#define REG_MMU_RWCMD_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x70UL)
#define REG_MMU_RWCMD_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x72UL)

#else
#define REG_MMU_NWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x68UL)
#define REG_MMU_NWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6AUL)
#define REG_MMU_HWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6CUL)
#define REG_MMU_HWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x6EUL)
#define REG_MMU_NWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x70UL)
#define REG_MMU_NWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x72UL)
#define REG_MMU_NWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x74UL)
#define REG_MMU_NWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x76UL)
#define REG_MMU_HWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x78UL)
#define REG_MMU_HWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x7AUL)
#define REG_MMU_HWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x7CUL)
#define REG_MMU_HWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x7EUL)
#endif
#define REG_MMU_PROTECT_HIT_FALG (BIT0)
#define REG_MMU_PROTECT_HIT_NO   6 : 1
#define REG_MMU_PROTECT_HIT_ID   14 : 8
#define REG_MMU_PROTECT_HIT_RW   7

#if 0
// MIU selection registers
#define REG_MIU_SEL0    (MIU_REG_BASE + 0xf0UL) // 0x12F0
#define REG_MIU_SEL1    (MIU_REG_BASE + 0xf2UL) // 0x12F1
#define REG_MIU_SEL2    (MIU_REG_BASE + 0xf4UL) // 0x12F2
#define REG_MIU_SEL3    (MIU_REG_BASE + 0xf6UL) // 0x12F3
#define REG_MIU_SELX(x) (0xF0UL + x * 2)
#endif
#if 0
// MIU1
#define MIU1_PROTECT_DDR_SIZE      (MIU1_REG_BASE + 0xD3UL)
#define MIU1_PROTECT_DDR_SIZE_MASK BITS_RANGE(15 : 12)

#define MIU1_PROTECT0_EN        (MIU1_REG_BASE + 0xD2UL)
#define MIU1_PROTECT1_EN        (MIU1_REG_BASE + 0xD2UL)
#define MIU1_PROTECT2_EN        (MIU1_REG_BASE + 0xD2UL)
#define MIU1_PROTECT3_EN        (MIU1_REG_BASE + 0xD2UL)
#define MIU1_PROTECT4_EN        (MIU1_ARB_REG_BASE + 0xDEUL)
#define MIU1_PROTECT_ID0        (MIU1_REG_BASE + 0x2EUL)
#define MIU1_PROTECT0_ID_ENABLE (MIU1_REG_BASE + 0x20UL)
#define MIU1_PROTECT1_ID_ENABLE (MIU1_REG_BASE + 0x22UL)
#define MIU1_PROTECT2_ID_ENABLE (MIU1_REG_BASE + 0x24UL)
#define MIU1_PROTECT3_ID_ENABLE (MIU1_REG_BASE + 0x26UL)
#define MIU1_PROTECT4_ID_ENABLE (MIU1_ARB_REG_BASE + 0xDC)
#define MIU1_PROTECT0_MSB       (MIU1_REG_BASE + 0xD0UL)
#define MIU1_PROTECT1_MSB       (MIU1_REG_BASE + 0xD0UL)
#define MIU1_PROTECT2_MSB       (MIU1_REG_BASE + 0xD0UL)
#define MIU1_PROTECT3_MSB       (MIU1_REG_BASE + 0xD0UL)
#define MIU1_PROTECT4_MSB       (MIU1_REG_BASE + 0xB2UL)
#define MIU1_PROTECT0_START     (MIU1_REG_BASE + 0xC0UL)
#define MIU1_PROTECT0_END       (MIU1_REG_BASE + 0xC2UL)
#define MIU1_PROTECT1_START     (MIU1_REG_BASE + 0xC4UL)
#define MIU1_PROTECT1_END       (MIU1_REG_BASE + 0xC6UL)
#define MIU1_PROTECT2_START     (MIU1_REG_BASE + 0xC8UL)
#define MIU1_PROTECT2_END       (MIU1_REG_BASE + 0xCAUL)
#define MIU1_PROTECT3_START     (MIU1_REG_BASE + 0xCCUL)
#define MIU1_PROTECT3_END       (MIU1_REG_BASE + 0xCEUL)
#define MIU1_PROTECT4_START     (MIU1_REG_BASE + 0x72UL)
#define MIU1_PROTECT4_END       (MIU1_REG_BASE + 0x92UL)
#endif

#define REG_MIU_I64_MODE  (BIT7)
#define REG_MIU_INIT_DONE (BIT15)

// Protection Status
#define REG_MIU_PROTECT_LOG_CLR  (BIT0)
#define REG_MIU_PROTECT_IRQ_MASK (BIT1)

// MIU Protection HIT
#if 1
#define REG_MIU_RWCMD_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x48UL)
//#define REG_MIU_WCMD_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4AUL)
#define REG_MIU_RWCMD_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x50UL)
//#define REG_MIU_RCMD_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x52UL)
//#define REG_MIU_WCMD_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x54UL)
#define REG_MIU_RWCMD_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x52UL)

#else
#define REG_MIU_NWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x48UL)
#define REG_MIU_NWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4AUL)
#define REG_MIU_HWR_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4CUL)
#define REG_MIU_HWW_PROTECT_STATUS (MIU_MMU_REG_BASE + 0x4EUL)

#define REG_MIU_NWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x50UL)
#define REG_MIU_NWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x52UL)
#define REG_MIU_NWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x54UL)
#define REG_MIU_NWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x56UL)
#define REG_MIU_HWR_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x58UL)
#define REG_MIU_HWR_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x5AUL)
#define REG_MIU_HWW_PROTECT_LOADDR (MIU_MMU_REG_BASE + 0x5CUL)
#define REG_MIU_HWW_PROTECT_HIADDR (MIU_MMU_REG_BASE + 0x5EUL)
#endif

#define REG_MIU_PROTECT_HIT_FALG (BIT0)
#define REG_MIU_PROTECT_HIT_NO   6 : 1
#define REG_MIU_PROTECT_HIT_ID   15 : 8
#define REG_MIU_PROTECT_HIT_RW   7 : 7

#define REG_MIU_PROTECT_PWR_IRQ_MASK_OFFSET (MIU_MMU_REG_BASE + 0x40UL)
#define REG_MIU_PROTECT_PWR_IRQ_MASK_BIT    (BIT11)

// MMU Control Register
#define REG_MMU_CTRL        (MIU_MMU_REG_BASE + 0x00UL)
#define REG_MMU_VPA_PASS    (MIU_MMU_REG_BASE + 0x0AUL) // 0x5 reg_mmu_pass_vpa
#define REG_MMU_VPA_REPLACE (MIU_MMU_REG_BASE + 0x0CUL) // 0x6 reg_mmu_replace_vpa
#define REG_MMU_RW_ENTRY    (MIU_MMU_REG_BASE + 0x04UL) // 0x2 reg_mmu_entry
#define REG_MMU_W_DATA      (MIU_MMU_REG_BASE + 0x06UL) // 0x3
#define REG_MMU_W_DATA_MASK 0x0FFF
#define REG_MMU_R_DATA      (MIU_MMU_REG_BASE + 0x08UL) // 0x4 reg_r_mmu_rdata
//#define REG_MMU_RCMD_R_DATA (MIU_MMU_REG_BASE + 0x08UL)
//#define REG_MMU_WCMD_R_DATA (MIU_MMU_REG_BASE + 0x0AUL)

//#define REG_MMU_CLIENT_ID_0_1       (MIU_MMU_REG_BASE+0xA8UL)
//#define REG_MMU_CLIENT_ID_2_3       (MIU_MMU_REG_BASE+0xAAUL)
//#define REG_MMU_CLIENT_ID_4_5       (MIU_MMU_REG_BASE+0xACUL)
//#define REG_MMU_CLIENT_ID_6_7       (MIU_MMU_REG_BASE+0xAEUL)
//#define REG_MMU_CLIENT_ID_SEL       (MIU_MMU_REG_BASE+0xB0UL)
#define REG_MMU_IRQ_CTRL (MIU_MMU_REG_BASE + 0x10UL)
#define REG_MMU_IRQ_FLAG (MIU_MMU_REG_BASE + 0x12UL)
//#define REG_MMU_COLLISION_ENTRY     (MIU_MMU_REG_BASE+0x20UL)
#define REG_MMU_RWCMD_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x20UL)
//#define REG_MMU_WCMD_COLLISION_ENTRY (MIU_MMU_REG_BASE + 0x22UL)

#define REG_MMU_ACCESS_TRIGGER      0x03
#define REG_MMU_ACCESS              (MIU_MMU_REG_BASE + 0x14UL)
#define REG_MMU_RWCMD_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x28UL) // bit[12:0]
//#define REG_MMU_WCMD_INVALID_ENTRY (MIU_MMU_REG_BASE + 0x2AUL) // bit[12:0]

#define REG_MMU_RWCMD_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x16UL) // offset:0x0b, bit[8:0]
//#define REG_MMU_WCMD_INVALID_CLIENT_ID (MIU_MMU_REG_BASE + 0x18UL) // offset:0x0c, bit[8:0]

// MMU Control
#define REG_MMU_CTRL_ENABLE         (BIT0)
#define REG_MMU_CTRL_PG_SIZE        2 : 1
#define REG_MMU_CTRL_PG_SIZE_32K    (~(BIT1))
#define REG_MMU_CTRL_PG_SIZE_64K    (BIT1)
#define REG_MMU_CTRL_PG_SIZE_128K   (BIT2)
#define REG_MMU_CTRL_RESET          (BIT4)
#define REG_MMU_CTRL_RESET_INIT_VAL (BIT5)
#define REG_MMU_CTRL_INIT_DONE      (BIT9)
#if 0
#define REG_MMU_CTRL_REGION_MASK    11 : 7
#define REG_MMU_CTRL_RP_REGION_MASK 15 : 12
#endif
// Read/Write Entry
#define REG_MMU_RW_ENTRY_MODE (BIT15)

// IRQ Control
//#define REG_MMU_IRQ_RCMD_RW_CLR (BIT0)
//#define REG_MMU_IRQ_WCMD_RW_CLR (BIT2)
#define REG_MMU_IRQ_RW_CLR     (BIT2)
#define REG_MMU_IRQ_RW_MASK    (BIT3)
#define REG_MMU_IRQ_RWCMD_CLR  (BIT0) // collision
#define REG_MMU_IRQ_RWCMD_MASK (BIT1) // rcmd
//#define REG_MMU_IRQ_WCMD_CLR    (BIT10)
//#define REG_MMU_IRQ_WCMD_MASK   (BIT11) // wcmd

// IRQ flga
#define REG_MMU_IRQ_RWCMD_RW_FLAG (BIT0) // 0x9
//#define REG_MMU_IRQ_WCMD_RW_FLAG (BIT1)
#define REG_MMU_IRQ_RW_FLAG (BIT8) // 0x9
//#define REG_MMU_IRQ_RCMD_FLAG    (BIT8)
//#define REG_MMU_IRQ_WCMD_FLAG    (BIT9)
#define REG_MMU_IRQ_INVALID_RW (BIT9)
//#define REG_MMU_IRQ_INVALID_ID_MASK 6:0
// M6
//#define REG_MMU_IRQ_RW_CLR          (BIT0)
//#define REG_MMU_IRQ_RW_MASK         (BIT1)
//#define REG_MMU_IRQ_RD_CLR          (BIT2)
//#define REG_MMU_IRQ_RD_MASK         (BIT3)
//#define REG_MMU_IRQ_WR_CLR          (BIT4)
//#define REG_MMU_IRQ_WR_MASK         (BIT5)
//#define REG_MMU_IRQ_RW_FLAG         (BIT6)
//#define REG_MMU_IRQ_RD_FLAG         (BIT7)
//#define REG_MMU_IRQ_WR_FLAG         (BIT8)
//#define REG_MMU_IRQ_INVALID_RW      (BIT9)

#endif // _REG_MIU_H_
